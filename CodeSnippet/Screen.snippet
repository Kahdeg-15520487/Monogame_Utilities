<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>Screen</Title>
      <Author>pc</Author>
      <Description>
      </Description>
      <HelpUrl>
      </HelpUrl>
      <Shortcut>Screen</Shortcut>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>TestConsole</ID>
          <ToolTip>TestConsole</ToolTip>
          <Default>Screen</Default>
          <Function>
          </Function>
        </Literal>
        <Literal Editable="true">
          <ID>Wartorn</ID>
          <ToolTip>MainNamespace</ToolTip>
          <Default>MainNameSpace</Default>
          <Function>
          </Function>
        </Literal>
      </Declarations>
      <Code Language="csharp" Delimiter="$"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;

using Utility;
using Utility.ScreenManager;
using Utility.UI;

namespace $Wartorn$.Screens
{
    class $TestConsole$ : Screen
    {
        Canvas canvas;

        public $TestConsole$(GraphicsDevice device) : base(device, "$TestConsole$")
        {}

        public override bool Init()
        {
			InitUI();
		
            return base.Init();
        }
		
		public void InitUI(){
			canvas = new Canvas();
		}

        public override void Shutdown()
        {
            base.Shutdown();
        }

        public override void Update(GameTime gameTime)
        {
            canvas.Update(gameTime, CONTENT_MANAGER.CurrentInputState, CONTENT_MANAGER.LastInputState);
        }

        public override void Draw(SpriteBatch spriteBatch, GameTime gameTime)
        {
            CONTENT_MANAGER.BeginSpriteBatch(spriteBatch);

            canvas.Draw(spriteBatch, gameTime);

            CONTENT_MANAGER.EndSpriteBatch(spriteBatch);
        }
    }
}
]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>